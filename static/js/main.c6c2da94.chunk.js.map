{"version":3,"sources":["components/mainScreenComp/NavbarMain.js","components/mainScreenComp/PersonFilter.js","components/mainScreenComp/SubjectFilter.js","components/mainScreenComp/DateFilter.js","components/mainScreenComp/FilterMain.js","components/mainScreenComp/WeekPlan.js","components/mainScreenComp/EmptyTask.js","components/mainScreenComp/FullTask.js","pages/ManageTasksMom.js","pages/SupermomMain.js","components/mainScreenComp/AddSubject.js","components/mainScreenComp/ShowSubjects.js","pages/ManageSubjects.js","components/mainScreenComp/AddPeople.js","components/mainScreenComp/ShowPeople.js","pages/ManagePeople.js","components/mainScreenComp/MyCalendar.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarMain","props","state","Navbar","Nav","className","Link","href","React","Component","PersonFilter","setFilter","event","target","value","myPeople","this","people","map","person","name","Form","Group","controlId","Label","Control","as","custom","onChange","SubjectFilter","mySubjects","subjects","sub","subject","DateFilter","type","FilterMain","findTasks","tasksToDo","filter","task","assignedTo","undefined","openTaskUpdate","title","openTaskUpdate2","tasksCards","Col","lg","md","sm","Card","Button","onClick","desc","date","time","class","WeekPlan","EmptyTask","handleClose","setState","isModalOpen","saveModalInfo","newTask","console","log","addTask","subjectsToChooseFrom","peopleToChooseFrom","Container","Modal","show","onHide","Header","closeButton","Title","Body","Row","column","placeholder","assignTo","Footer","variant","FullTask","setModalCloseInParent","updatedTask","updateTask","done","currentTask","find","setFirstValues","ManageTasksMom","myTitle","updateTaskOpen","taskTitle","description","taskObj","showTasks","setCurrentTaskTitle","tasksToShow","SupermomMain","setMainFilter","AddSubject","newSubject","addSubject","ShowSubjects","ManageSubjects","AddPeople","bday","permission","prefferedSubjects","newPerson","addPeople","ShowPeople","ManagePeople","localizer","momentLocalizer","moment","DnDCalendar","withDragAndDrop","Calendar","MyCalendar","Date","events","start","toDate","end","id","onEventResize","data","onEventDrop","eventClicked","filterEvents","myEvents","defaultDate","defaultView","resizable","style","height","onSelectEvent","eventPropGetter","App","myFilter","mainFilter","taskIndex","findIndex","taskToDo","helper","concat","index","parseInt","substring","toString","removeSubject","tasksDone","exact","path","isSelected","newStyle","backgroundColor","color","borderRadius","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6c2da94.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport './NavbarMain.css'\r\n\r\nclass NavbarMain extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n              <Navbar>\r\n                {/*  bg=\"dark\" variant=\"dark\" */}\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/#\">Home</Nav.Link>\r\n                  <Nav.Link href=\"#manageTasks\">Manage Tasks</Nav.Link>\r\n                  <Nav.Link href=\"#manageSubjects\">Manage Subjects</Nav.Link>\r\n                  <Nav.Link href=\"#managePeople\">Manage People</Nav.Link>\r\n                  <Nav.Link href=\"#messages\">Messages</Nav.Link>\r\n                  {/* Add icon on notifications when new msg */}\r\n                  <Nav.Link href=\"#notifications\">Notifications</Nav.Link>\r\n                  <Nav.Link href=\"#logout\">logout</Nav.Link>\r\n                </Nav>\r\n              </Navbar>\r\n\r\n            </div> \r\n        )\r\n    }\r\n}\r\nexport default NavbarMain;\r\n","import React from 'react'\r\nimport { Form  } from 'react-bootstrap';\r\n\r\nclass PersonFilter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           \r\n        }\r\n    }\r\n\r\nsetFilter = (event) => {\r\n    this.props.setFilter({'name': event.target.value })\r\n}\r\n\r\n    render(){\r\n        \r\n        const myPeople = this.props.people.map((person)=>{return (<option>{person.name}</option>)});\r\n        return(\r\n\r\n                    // <Form>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Label>Choose Person</Form.Label>\r\n                            {/* Change onClick instead of onChanged */}\r\n                            <Form.Control as=\"select\" custom onChange={this.setFilter}>\r\n                                {myPeople}\r\n    \r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    // </Form>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonFilter;\r\n","import React from 'react'\r\nimport { Form  } from 'react-bootstrap';\r\n\r\nclass SubjectFilter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    setFilter = (event) => {\r\n        this.props.setFilter({'subject': event.target.value })\r\n    }\r\n    render(){\r\n\r\n        const mySubjects = this.props.subjects.map((sub)=>{return (<option>{sub.subject}</option>)});\r\n\r\n        return(\r\n\r\n                    // <Form>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Label>Choose Subject</Form.Label>\r\n                            <Form.Control as=\"select\" custom onChange={this.setFilter}>\r\n                                {mySubjects}\r\n                            {/* <option>Sub1</option>\r\n                            <option>Sub2</option>\r\n                            <option>Sub3</option>\r\n                            <option>Sub4</option> */}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    // </Form>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default SubjectFilter;\r\n","import React from 'react'\r\nimport { Form  } from 'react-bootstrap';\r\n\r\nclass DateFilter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n                    // <Form>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Label>Choose Day</Form.Label>\r\n                            <Form.Control type=\"date\" name='day'/>\r\n                        </Form.Group>\r\n                   /* </Form>  */\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default DateFilter;\r\n","import React from 'react'\r\nimport PersonFilter from './PersonFilter';\r\nimport SubjectFilter from './SubjectFilter';\r\nimport DateFilter from './DateFilter';\r\nimport { Form, Button, Col, Card  } from 'react-bootstrap';\r\n\r\n// Dont forget it also gets props: tasksToShow = {this.state.tasksToShow}\r\n\r\nclass FilterMain extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        // this.state = {\r\n        //     tasksToShow : []\r\n        // }\r\n    }\r\n\r\n    // showTasks = () => {\r\n    //     this.props.showTasks(this.props.filter);\r\n    // }\r\n\r\n    findTasks = () => {\r\n        const filteredTasks = this.props.tasksToDo.filter((task) => {\r\n                if((this.props.filter.name == task.assignedTo && this.props.filter.subject == task.subject)||\r\n                (this.props.filter.name == undefined && this.props.filter.subject == task.subject)||\r\n                (this.props.filter.name == task.assignedTo && this.props.filter.subject == undefined))\r\n                    return true;\r\n                }\r\n                )\r\n        // this.setState(\r\n        //     {\r\n        //         tasksToShow: filteredTasks \r\n        //     }     \r\n        // )\r\n        return filteredTasks;\r\n    }\r\n\r\n    setFilter = (filter) => {\r\n        this.props.setFilter(filter)\r\n    }\r\n\r\n    openTaskUpdate = (title) => {\r\n       // this.props.setCurrentTaskTitle(title);\r\n        this.props.openTaskUpdate(title);\r\n    }\r\n\r\n    openTaskUpdate2 =(title) => {\r\n        // this.props.setCurrentTaskTitle(title);\r\n         this.props.openTaskUpdate2(title);\r\n     }\r\n\r\n    render(){\r\n        const filTasks = this.findTasks();\r\n        const tasksCards = filTasks.map((task) => {\r\n        // const tasksCards = this.props.tasksToShow.map((task) => {\r\n            // <Link to=\"/signup\">Sign up</Link>\r\n\r\n            return(\r\n            <Col lg={3} md={6} sm={12}>\r\n                    <Card className = 'tasks-cards'>\r\n                        <Button onClick={()=>{this.openTaskUpdate2(task.title)}}>{task.title}</Button>\r\n                        {/* <Button onClick={()=>{this.setState({isModalOpen:true})}}>{task.title}</Button> */}\r\n                        {/* <h1>{task.title}</h1> */}\r\n                        <p>{task.desc}</p>\r\n                        <h5>{task.date}</h5>\r\n                        <h5>{task.time}</h5>\r\n                        <h5>{task.assignedTo}</h5>\r\n                    </Card>\r\n            </Col>\r\n            )\r\n            })\r\n\r\n        return (\r\n            <Form>\r\n                <PersonFilter setFilter = {this.setFilter} people = {this.props.people}></PersonFilter>\r\n                <SubjectFilter setFilter = {this.setFilter} subjects = {this.props.subjects}></SubjectFilter>\r\n                <DateFilter setFilter = {this.setFilter}></DateFilter>\r\n                {/* <Button variant=\"primary\" type='button' onClick={this.showTasks}>Find Tasks</Button> */}\r\n                <div class='filtered-cards'>\r\n                    {tasksCards}\r\n                </div>\r\n               \r\n                \r\n       \r\n\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterMain;","import React from 'react'\r\n\r\n\r\nclass WeekPlan extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n                <div>Weekplan</div>   \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekPlan;\r\n","import React from 'react';\r\nimport { Card, Container, ListGroup, ListGroupItem, Form, Col, Row, Modal, Button } from 'react-bootstrap';\r\n\r\nclass EmptyTask extends React.Component{\r\n    constructor(props){\r\n        //gets addTask(newTask) as props. used in saveModalIvfo\r\n        super(props);//will get the task array and a function to add a task to the array\r\n        this.state = {\r\n                //All the task's data in the form\r\n            isModalOpen: false,\r\n            title: '',\r\n            desc: '',\r\n            date: '',\r\n            time:'',\r\n            assignedTo:'',\r\n            subject:''\r\n        }\r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            isModalOpen: false,\r\n            title: '',\r\n            desc: '',\r\n            date: '',\r\n            time:'',\r\n            assignedTo:'',\r\n            subject:''\r\n           \r\n        })\r\n    }\r\n\r\n    saveModalInfo = () =>{\r\n\r\n        // TODO: Make sure the task has all the needed fields as expected\r\n        const newTask = {\r\n            title: this.state.title,\r\n            subject: this.state.subject,\r\n            desc: this.state.desc,\r\n            date: this.state.date,\r\n            time: this.state.time,\r\n            assignedTo: this.state.assignedTo\r\n            \r\n        }\r\n        console.log(newTask);\r\n        this.props.addTask(newTask); \r\n        this.handleClose();\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const subjectsToChooseFrom = this.props.subjects.map((sub) => {\r\n            return (<option>{sub.subject}</option>)\r\n        })\r\n\r\n        const peopleToChooseFrom = this.props.people.map((person) => {\r\n            return (<option>{person.name}</option>)\r\n        })\r\n\r\n        return(\r\n          <Container>\r\n                <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add a Task</Button>\r\n          \r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Add a Task</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n        \r\n\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column sm={2}>\r\n                    Title:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Task title\"\r\n                            value={this.state.title}\r\n                            onChange={(event)=> {this.setState({title: event.target.value})}}\r\n                            />\r\n                    </Col>\r\n\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Subject:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.subject}\r\n                            onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                        >\r\n                                {subjectsToChooseFrom}\r\n                        </Form.Control>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Task Subject\"\r\n                        value={this.state.subject}\r\n                        onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                        /> */}\r\n                    </Col>\r\n\r\n                    {/* //instead of type text above, change to a select, to select from the existing subjects. use map \r\n                    <Form.Control as=\"select\" custom>\r\n                            <option>Mom</option>\r\n                            <option>Dad</option>\r\n                            <option>Adi</option>\r\n                            <option>Yair</option>\r\n                            </Form.Control> */}\r\n{/* \r\n                    <Form.Label column sm={2}>\r\n                    Subject:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Task Subject\"\r\n                        value={this.state.subject}\r\n                        onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                        />\r\n                    </Col> */}\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Description:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Task Description\"\r\n                        value={this.state.desc}\r\n                        onChange={(event)=> {this.setState({desc: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Date:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"date\"\r\n                        value={this.state.date}\r\n                        onChange={(event)=> {this.setState({date: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Time:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"time\" placeholder=\"Task Time\"\r\n                        value={this.state.time}\r\n                        onChange={(event)=> {this.setState({time: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Assign to:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Assign to\"\r\n                        value={this.state.assignTo}\r\n                        onChange={(event)=> {this.setState({assignTo: event.target.value})}}\r\n                        /> */}\r\n\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.assignTo}\r\n                            onChange={(event)=> {this.setState({assignedTo: event.target.value})}}\r\n                        >\r\n                                {peopleToChooseFrom}\r\n                        </Form.Control>\r\n\r\n                    </Col>\r\n                   \r\n                    \r\n                    \r\n                </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={this.saveModalInfo}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmptyTask;","import React from 'react';\r\nimport { Card, ListGroup, ListGroupItem, Container, Form, Col, Row, Modal, Button } from 'react-bootstrap';\r\n\r\n\r\n//Gets as props a task with all its data and function updateTask, subject, people, tasksToDo\r\n\r\nclass FullTask extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: '',\r\n            // title: this.props.task.title,\r\n            // desc: this.props.task.description,\r\n            // date: this.props.task.date,\r\n            // time:this.props.task.time,\r\n            // assignedTo:this.props.task.assignedTo,\r\n            // subject:this.props.task.subject,\r\n            // done: false\r\n\r\n            title: '',\r\n            desc: '',\r\n            date: '',\r\n            time:'',\r\n            assignedTo:'',\r\n            subject:'',\r\n            done: false\r\n        }\r\n    }\r\n\r\n        handleClose = () =>{\r\n        this.setState({\r\n            isModalOpen: false,\r\n        })\r\n        this.props.setModalCloseInParent();\r\n    }\r\n\r\n    saveModalInfo = () =>{\r\n\r\n        // TODO: Make sure the task has all the needed fields as expected\r\n        const updatedTask = {\r\n            title: this.state.title,\r\n            subject: this.state.subject,\r\n            desc: this.state.desc,\r\n            date: this.state.date,\r\n            time: this.state.time,\r\n            assignedTo: this.state.assignedTo,\r\n            // done: this.state.done\r\n        }\r\n        // console.log(newTask.title + 'in EmptyTask');\r\n        this.props.updateTask(updatedTask); \r\n        this.handleClose();\r\n    }\r\n\r\n    setFirstValues(currentTask){\r\n        this.setState({\r\n        title: currentTask.title,\r\n        desc: currentTask.desc,\r\n        date: currentTask.date,\r\n        time:currentTask.time,\r\n        assignedTo:currentTask.assignedTo,\r\n        subject:currentTask.subject,\r\n        // done: currentTask.done\r\n        })\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     const currentTask = this.props.tasksToDo.filter((task) => {\r\n    //         if(this.props.tasksToDo.title == task.title)\r\n    //             return true;\r\n    //     }\r\n    //     )\r\n    //     this.setState({\r\n    //         title: currentTask.title,\r\n    //         desc: currentTask.description,\r\n    //         date: currentTask.date,\r\n    //         time:currentTask.time,\r\n    //         assignedTo:currentTask.assignedTo,\r\n    //         subject:currentTask.subject,\r\n    //         // done: currentTask.done\r\n    //     })\r\n    // }\r\n\r\n//     shouldComponentUpdate(){\r\n//         const currentTask = this.props.tasksToDo.filter((task) => {\r\n//             if(this.props.tasksToDo.title == task.title)\r\n//                 return true;\r\n//         }\r\n//         )\r\n//         if(this.props.isModalOpen == true && this.state.title != ''){\r\n//             this.setFirstValues(currentTask);\r\n//     }\r\n//     return true;\r\n// }\r\n\r\n    render(){\r\n        const subjectsToChooseFrom = this.props.subjects.map((sub) => {\r\n            return (<option value={sub.subject}>{sub.subject}</option>)\r\n        })\r\n\r\n        const peopleToChooseFrom = this.props.people.map((person) => {\r\n            return (<option value={person.name}>{person.name}</option>)\r\n        })\r\n\r\n        const currentTask = this.props.tasksToDo.find((task) => {\r\n            if(this.props.title == task.title)\r\n                return true;\r\n        }\r\n        )\r\n        console.log(currentTask);\r\n        if( currentTask && this.props.isModalOpen == true && this.state.title == '' ){\r\n            // console.log(currentTask);\r\n            this.setFirstValues(currentTask);\r\n        }\r\n       //  this.setFirstValues(currentTask);\r\n\r\n        // this.setState({\r\n        //     //isModalOpen : this.props.isModalOpen,\r\n\r\n        // })\r\n        return(\r\n          <Container>\r\n                {/* <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add a Task</Button> */}\r\n          \r\n                <Modal show={this.props.isModalOpen} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Update Task</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n        \r\n\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column sm={2}>\r\n                    Title:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        placeholder={this.props.title}\r\n                        // placeholder={this.props.taskObj.title}\r\n                            value={this.state.title}\r\n                            onChange={(event)=> {this.setState({title: event.target.value})}}\r\n                            />\r\n                    </Col>\r\n\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Subject:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.subject}\r\n                            onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                        >\r\n                                {subjectsToChooseFrom}\r\n                        </Form.Control>\r\n                       \r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Description:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Task Description\"\r\n                        value={this.state.desc}\r\n                        onChange={(event)=> {this.setState({desc: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Date:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"date\" placeholder=\"Task Description\"\r\n                        value={this.state.date}\r\n                        onChange={(event)=> {this.setState({date: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Time:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"time\" placeholder=\"Task Time\"\r\n                        value={this.state.time}\r\n                        onChange={(event)=> {this.setState({time: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Assign to:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.assignedTo}\r\n                            onChange={(event)=> {this.setState({assignedTo: event.target.value})}}\r\n                        >\r\n                                {peopleToChooseFrom}\r\n                        </Form.Control>\r\n\r\n                    </Col>\r\n                   \r\n                    \r\n                    \r\n                </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={this.saveModalInfo}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FullTask;\r\n\r\n\r\n// ////////////////////////////\r\n// import React from 'react';\r\n// import { Card, Container, ListGroup, ListGroupItem Container, Form, Col, Row, Modal, Button } from 'react-bootstrap';\r\n\r\n// class EmptyTask extends React.Component{\r\n//     constructor(props){\r\n//         //gets addTask(newTask) as props. used in saveModalIvfo\r\n//         super(props);//will get the task array and a function to add a task to the array\r\n//         this.state = {\r\n//                 //All the task's data in the form\r\n//             isModalOpen: false,\r\n//             title: '',\r\n//             desc: '',\r\n//             date: '',\r\n//             time:'',\r\n//             assignedTo:'',\r\n//             subject:''\r\n//         }\r\n//     }\r\n\r\n//     handleClose = () =>{\r\n//         this.setState({\r\n//             isModalOpen: false,\r\n//             title: '',\r\n//             desc: '',\r\n//             date: '',\r\n//             time:'',\r\n//             assignedTo:'',\r\n//             subject:''\r\n           \r\n//         })\r\n//     }\r\n\r\n//     saveModalInfo = () =>{\r\n\r\n//         // TODO: Make sure the task has all the needed fields as expected\r\n//         const newTask = {\r\n//             title: this.state.title,\r\n//             subject: this.state.subject,\r\n//             desc: this.state.desc,\r\n//             date: this.state.date,\r\n//             time: this.state.time,\r\n//             assignedTo: this.state.assignedTo\r\n            \r\n//         }\r\n//         console.log(newTask.title + 'in EmptyTask');\r\n//         this.props.addTask(newTask); \r\n//         this.handleClose();\r\n\r\n//     }\r\n\r\n\r\n//     render(){\r\n//         const subjectsToChooseFrom = this.props.subjects.map((sub) => {\r\n//             return (<option>{sub.subject}</option>)\r\n//         })\r\n\r\n//         const peopleToChooseFrom = this.props.people.map((person) => {\r\n//             return (<option>{person.name}</option>)\r\n//         })\r\n\r\n//         return(\r\n//           <Container>\r\n//                 <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add a Task</Button>\r\n          \r\n//                 <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n//                 <Modal.Header closeButton>\r\n//                 <Modal.Title>Add a Task</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>\r\n        \r\n\r\n//                 <Form.Group as={Row} >\r\n//                     <Form.Label column sm={2}>\r\n//                     Title:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control \r\n//                         type=\"text\" \r\n//                         placeholder=\"Task title\"\r\n//                             value={this.state.title}\r\n//                             onChange={(event)=> {this.setState({title: event.target.value})}}\r\n//                             />\r\n//                     </Col>\r\n\r\n\r\n//                     <Form.Label column sm={2}>\r\n//                     Subject:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control as=\"select\" custom\r\n//                             value={this.state.subject}\r\n//                             onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n//                         >\r\n//                                 {subjectsToChooseFrom}\r\n//                         </Form.Control>\r\n//                         {/* <Form.Control type=\"text\" placeholder=\"Task Subject\"\r\n//                         value={this.state.subject}\r\n//                         onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n//                         /> */}\r\n//                     </Col>\r\n\r\n//                     {/* //instead of type text above, change to a select, to select from the existing subjects. use map \r\n//                     <Form.Control as=\"select\" custom>\r\n//                             <option>Mom</option>\r\n//                             <option>Dad</option>\r\n//                             <option>Adi</option>\r\n//                             <option>Yair</option>\r\n//                             </Form.Control> */}\r\n// {/* \r\n//                     <Form.Label column sm={2}>\r\n//                     Subject:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control type=\"text\" placeholder=\"Task Subject\"\r\n//                         value={this.state.subject}\r\n//                         onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n//                         />\r\n//                     </Col> */}\r\n\r\n//                     <Form.Label column sm={2}>\r\n//                     Description:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control type=\"text\" placeholder=\"Task Description\"\r\n//                         value={this.state.desc}\r\n//                         onChange={(event)=> {this.setState({desc: event.target.value})}}\r\n//                         />\r\n//                     </Col>\r\n\r\n//                     <Form.Label column sm={2}>\r\n//                     Date:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control type=\"date\" placeholder=\"Task Description\"\r\n//                         value={this.state.date}\r\n//                         onChange={(event)=> {this.setState({date: event.target.value})}}\r\n//                         />\r\n//                     </Col>\r\n\r\n//                     <Form.Label column sm={2}>\r\n//                     Time:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         <Form.Control type=\"time\" placeholder=\"Task Time\"\r\n//                         value={this.state.time}\r\n//                         onChange={(event)=> {this.setState({time: event.target.value})}}\r\n//                         />\r\n//                     </Col>\r\n\r\n//                     <Form.Label column sm={2}>\r\n//                     Assign to:\r\n//                     </Form.Label>\r\n//                     <Col sm={10}>\r\n//                         {/* <Form.Control type=\"text\" placeholder=\"Assign to\"\r\n//                         value={this.state.assignTo}\r\n//                         onChange={(event)=> {this.setState({assignTo: event.target.value})}}\r\n//                         /> */}\r\n\r\n//                         <Form.Control as=\"select\" custom\r\n//                             value={this.state.assignTo}\r\n//                             onChange={(event)=> {this.setState({assignedTo: event.target.value})}}\r\n//                         >\r\n//                                 {peopleToChooseFrom}\r\n//                         </Form.Control>\r\n\r\n//                     </Col>\r\n                   \r\n                    \r\n                    \r\n//                 </Form.Group>\r\n\r\n//                 </Modal.Body>\r\n//                 <Modal.Footer>\r\n//                 <Button variant=\"secondary\" onClick={this.handleClose}>\r\n//                     Close\r\n//                 </Button>\r\n//                 <Button type=\"button\" variant=\"primary\" onClick={this.saveModalInfo}>\r\n//                     Save Changes\r\n//                 </Button>\r\n//                 </Modal.Footer>\r\n//             </Modal>\r\n//           </Container>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default EmptyTask;","import React from 'react';\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport FilterMain from '../components/mainScreenComp/FilterMain';\r\nimport EmptyTask from '../components/mainScreenComp/EmptyTask';\r\nimport './ManageTasks.css'\r\nimport FullTask from '../components/mainScreenComp/FullTask';\r\nimport SupermomMain from './SupermomMain'; \r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nclass ManageTasksMom extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            updateTaskOpen : false,\r\n            taskTitle:'',\r\n            desc:'',\r\n            date:'',\r\n            time:'',\r\n            assignedTo:'',\r\n            subject:'',\r\n            taskObj:{}\r\n        }\r\n    }\r\n    addTask = (task) => {\r\n        // console.log(task.title + 'in ManageTasksMom');\r\n        this.props.addTask(task);\r\n    }\r\n\r\n    updateTask = (task) => {\r\n        // console.log(task.title + 'in ManageTasksMom');\r\n        this.props.updateTask(task);\r\n    }\r\n\r\n    openTaskUpdate2 = (myTitle) => {\r\n        \r\n        // this.setState({\r\n        //     updateTaskOpen:true,\r\n        //     taskTitle:myTitle\r\n        // })\r\n\r\n        const currentTask = this.props.tasksToDo.filter((task) => {\r\n            if(myTitle == task.title)\r\n                return true;\r\n        }\r\n        )\r\n\r\n        this.setState({\r\n            updateTaskOpen : true,\r\n            taskTitle: currentTask[0].title,\r\n            desc: currentTask.description,\r\n            date: currentTask.date,\r\n            time:currentTask.time,\r\n            assignedTo:currentTask.assignedTo,\r\n            subject:currentTask.subject,\r\n\r\n            taskObj: {title: currentTask.title,\r\n                desc: currentTask.description,\r\n                date: currentTask.date,\r\n                time:currentTask.time,\r\n                assignedTo:currentTask.assignedTo,\r\n                subject:currentTask.subject}\r\n        })\r\n\r\n    }\r\n\r\n    openTaskUpdate = (title) =>{\r\n        \r\n        const currentTask = this.props.tasksToDo.filter((task) => {\r\n            if(title == task.title)\r\n                return true;\r\n        }\r\n        )\r\n\r\n        this.setState({\r\n            updateTaskOpen : true,\r\n            taskTitle: currentTask[0].title,\r\n            desc: currentTask[0].description,\r\n            date: currentTask[0].date,\r\n            time:currentTask[0].time,\r\n            assignedTo:currentTask[0].assignedTo,\r\n            subject:currentTask[0].subject,\r\n\r\n            taskObj: currentTask[0]\r\n        })\r\n    }\r\n\r\n    // setCurrentTaskTitle = (title) =>{\r\n    //     this.setState({\r\n    //         taskTitle : title\r\n    //     })\r\n    // }\r\n\r\n    showTasks = (filter) => {\r\n        this.props.showTasks(filter);\r\n    }\r\n\r\n    setFilter = (filter) => {\r\n        this.props.setFilter(filter);\r\n    }\r\n\r\n    setModalCloseInParent = () =>{\r\n        this.setState({\r\n            updateTaskOpen : false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           \r\n                <div className='manage-tasks'>\r\n                    <div className='manage-tasks-child'>\r\n                        <h3>Find and edit tasks</h3>\r\n                        <FilterMain setCurrentTaskTitle = {this.setCurrentTaskTitle} openTaskUpdate={this.openTaskUpdate} openTaskUpdate2={this.openTaskUpdate2} setFilter = {this.setFilter} tasksToDo = {this.props.tasksToDo} filter = {this.props.filter} tasksToShow = {this.props.tasksToShow} showTasks = {this.props.showTasks} people = {this.props.people} subjects = {this.props.subjects}></FilterMain>\r\n                        {/* {this.props.tasksToShow} */}\r\n                    </div>\r\n                    \r\n                    <div className='manage-tasks-child'>\r\n                        <EmptyTask addTask = {this.addTask} people = {this.props.people} subjects = {this.props.subjects}></EmptyTask>\r\n                    </div>\r\n                    <div>\r\n                        <FullTask taskObj={this.state.taskObj} title={this.state.taskTitle} subject={this.state.subject} desc={this.state.desc} taskObj = {this.state.taskObj} taskTitle={this.state.taskTitle} setModalCloseInParent = {this.setModalCloseInParent} isModalOpen = {this.state.updateTaskOpen} updateTask = {this.updateTask} people = {this.props.people} subjects = {this.props.subjects} tasksToDo = {this.props.tasksToDo}></FullTask>\r\n                    </div>\r\n                    \r\n    {/* The EmptyTask will open when the button will be clicked\r\n    //  FullTask will open when clicking a task on the list from the filter */}\r\n    {/* Send props */}\r\n                    {/* <EmptyTask addTask = {this.addTask}></EmptyTask> */}\r\n                    {/* //will send the task array and a function to add a task to the array */}\r\n                    \r\n                    {/* <FullTask></FullTask> */}\r\n                    \r\n                    {/* //will send the task array and a function to add a task to the array */}\r\n                </div>\r\n      \r\n        )\r\n    }\r\n\r\n}\r\n  \r\nexport default ManageTasksMom;\r\n  ","import React from 'react';\r\nimport NavbarMain from '../components/mainScreenComp/NavbarMain';\r\nimport FilterMain from '../components/mainScreenComp/FilterMain';\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport WeekPlan from '../components/mainScreenComp/WeekPlan';\r\nimport ManageTasksMom from './ManageTasksMom';\r\nimport PersonFilter from '../components/mainScreenComp/PersonFilter';\r\nimport SubjectFilter from '../components/mainScreenComp/SubjectFilter';\r\nimport FullTask from '../components/mainScreenComp/FullTask';\r\n\r\nclass SupermomMain extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        // this.state = {\r\n        //     updateTaskOpen : false,\r\n        //     taskTitle:'',\r\n        //     desc:'',\r\n        //     date:'',\r\n        //     time:'',\r\n        //     assignedTo:'',\r\n        //     subject:'',\r\n        //     taskObj:{}\r\n        // }\r\n    }\r\n\r\n    // openTaskUpdate2 = (myTitle) => {\r\n        \r\n    //     // this.setState({\r\n    //     //     updateTaskOpen:true,\r\n    //     //     taskTitle:myTitle\r\n    //     // })\r\n\r\n    //     const currentTask = this.props.tasksToDo.filter((task) => {\r\n    //         if(myTitle == task.title)\r\n    //             return true;\r\n    //     }\r\n    //     )\r\n\r\n    //     this.setState({\r\n    //         updateTaskOpen : true,\r\n    //         taskTitle: currentTask[0].title,\r\n    //         desc: currentTask.description,\r\n    //         date: currentTask.date,\r\n    //         time:currentTask.time,\r\n    //         assignedTo:currentTask.assignedTo,\r\n    //         subject:currentTask.subject,\r\n\r\n    //         taskObj: {title: currentTask.title,\r\n    //             desc: currentTask.description,\r\n    //             date: currentTask.date,\r\n    //             time:currentTask.time,\r\n    //             assignedTo:currentTask.assignedTo,\r\n    //             subject:currentTask.subject}\r\n    //     })\r\n\r\n    // }\r\n\r\n    showTasks = (filter) => {\r\n        this.props.showTasks(filter);\r\n    }\r\n\r\n    // setModalCloseInParent = () =>{\r\n    //     this.setState({\r\n    //         updateTaskOpen : false\r\n    //     })\r\n    // }\r\n\r\n    setFilter = (filter) => {\r\n        this.props.setFilter(filter);\r\n    }\r\n\r\n    setMainFilter = (filter) => {\r\n        this.props.setMainFilter(filter);\r\n    }\r\n\r\n    // addTask = (task) =>{\r\n    //     let helper = this.state.tasksToDo.concat(task);\r\n    //     this.setState(\r\n    //         {\r\n    //             tasksToDo: helper \r\n    //         }      \r\n    //     )\r\n    // }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <NavbarMain></NavbarMain> */}\r\n                {/* <FilterMain tasksToDo = {this.props.tasksToDo} setFilter = {this.setFilter} filter = {this.props.filter} tasksToShow = {this.props.tasksToShow} showTasks = {this.props.showTasks} people = {this.props.people} subjects = {this.props.subjects}></FilterMain> */}\r\n                <PersonFilter setFilter = {this.setFilter} people = {this.props.people}></PersonFilter>\r\n                {/* <SubjectFilter subjects = {this.props.subjects} setFilter = {this.setFilter}></SubjectFilter> */}\r\n                <WeekPlan></WeekPlan>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n  \r\nexport default SupermomMain;\r\n  ","import React from 'react';\r\nimport { Card, Container, ListGroup, ListGroupItem, Form, Col, Row, Modal, Button } from 'react-bootstrap';\r\n\r\nclass AddSubject extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            subject: ''\r\n        }\r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n\r\n            isModalOpen: false,\r\n            subject: ''\r\n        })\r\n    }\r\n\r\n    saveModalInfo = () =>{\r\n\r\n        // TODO: Make sure the subject has all the needed fields as expected\r\n        const newSubject = {\r\n            subject: this.state.subject,\r\n            \r\n        }\r\n        console.log('in save|ModalInfo '+newSubject.subject)\r\n        this.props.addSubject(newSubject); \r\n        this.handleClose();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Container>\r\n                <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add a Subject</Button>\r\n          \r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Add a Subject</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n        \r\n\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column sm={2}>\r\n                    Subject:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Subject\"\r\n                            value={this.state.title}\r\n                            onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                            />\r\n                    </Col>\r\n                    \r\n                </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={this.saveModalInfo}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddSubject;\r\n\r\n\r\n\r\n   \r\n\r\n    \r\n\r\n\r\n","import React from 'react';\r\n\r\nclass ShowSubjects extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <h1>Show subjcts</h1>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ShowSubjects;","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport AddSubject from \"../components/mainScreenComp/AddSubject\";\r\nimport ShowSubjects from \"../components/mainScreenComp/ShowSubjects\";\r\n\r\nclass ManageSubjects extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    addSubject = (sub) => {\r\n        console.log(sub.subject + ' in manageSubjects')\r\n        this.props.addSubject(sub);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <ShowSubjects subjects = {this.props.subjects}></ShowSubjects>\r\n                <AddSubject addSubject = {this.addSubject}></AddSubject>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ManageSubjects;","\r\n\r\nimport React from 'react';\r\nimport { Card, Container, ListGroup, ListGroupItem, Form, Col, Row, Modal, Button } from 'react-bootstrap';\r\n\r\nclass AddPeople extends React.Component{\r\n    constructor(props){\r\n        //gets addTask(newTask) as props. used in saveModalIvfo\r\n        super(props);//will get the task array and a function to add a task to the array\r\n        this.state = {\r\n            isModalOpen: false,\r\n            name: '',\r\n            bday: '',\r\n            permission: '',\r\n            prefferedSubjects:[]\r\n        }\r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            isModalOpen: false,\r\n            name: '',\r\n            bday: '',\r\n            permission: '',\r\n            prefferedSubjects:[]\r\n        })\r\n    }\r\n\r\n    saveModalInfo = () =>{\r\n\r\n        // TODO: Make sure the task has all the needed fields as expected\r\n        const newPerson = {\r\n            name: this.state.name,\r\n            bday: this.state.bday,\r\n            permission: this.state.permission,\r\n            prefferedSubjects: this.state.prefferedSubjects,\r\n        }\r\n        console.log(newPerson.prefferedSubjects + 'in AddPaeople');\r\n        this.props.addPeople(newPerson); \r\n        this.handleClose();\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        // thats for adding tasks and for preffered subjects:\r\n       \r\n        const subjectsToChooseFrom = this.props.subjects.map((sub) => {\r\n            return (<option>{sub.subject}</option>)\r\n        })\r\n        return(\r\n          <Container>\r\n                <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add a Person</Button>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Add a Person</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n        \r\n\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column sm={2}>\r\n                    Name:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                            value={this.state.name}\r\n                            onChange={(event)=> {this.setState({name: event.target.value})}}\r\n                            />\r\n                    </Col>\r\n\r\n                    <Form.Label column sm={2}>\r\n                    Birthday:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"date\" placeholder=\"Birthday\"\r\n                        value={this.state.bday}\r\n                        onChange={(event)=> {this.setState({bday: event.target.value})}}\r\n                        />\r\n                    </Col>\r\n\r\n                    {/* //instead of type text above, change to a select, to select from the existing subjects. use map \r\n                    <Form.Control as=\"select\" custom>\r\n                            <option>Mom</option>\r\n                            <option>Dad</option>\r\n                            <option>Adi</option>\r\n                            <option>Yair</option>\r\n                            </Form.Control> */}\r\n{/* \r\n                    <Form.Label column sm={2}>\r\n                    Subject:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Task Subject\"\r\n                        value={this.state.subject}\r\n                        onChange={(event)=> {this.setState({subject: event.target.value})}}\r\n                        />\r\n                    </Col> */}\r\n\r\n\r\n                    {/* Change Permission to choose from 3 options */}\r\n                    \r\n                    <Form.Label column sm={2}>\r\n                    Permission:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.permission}\r\n                            onChange={(event)=> {this.setState({permission: event.target.value})}}\r\n                        >\r\n                                <option>Admin</option>\r\n                                <option>Child</option>\r\n                                <option>Charlady</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    \r\n                    {/* //Should be able to choose subjects from the subjects list and add them to prefferedSubjects */}\r\n                    <Form.Label column sm={2}>\r\n                    Preffered Subjects:\r\n                   {/* //subjectsToChooseFrom */}\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control as=\"select\" custom\r\n                            value={this.state.prefferedSubjects}\r\n                            onChange={(event)=> {this.setState({prefferedSubjects: event.target.value})}}\r\n                        >\r\n                                {subjectsToChooseFrom}\r\n                        </Form.Control>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Preffered Subjects\"\r\n                        value={this.state.prefferedSubjects}\r\n                        onChange={(event)=> {this.setState({prefferedSubjects: event.target.value})}}\r\n                        /> */}\r\n                    </Col>\r\n                   \r\n                    \r\n                    \r\n                </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={this.saveModalInfo}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPeople;","import React from 'react';\r\n\r\nclass ShowPeople extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <h1>Show people</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowPeople;","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport AddPeople from \"../components/mainScreenComp/AddPeople\";\r\nimport ShowPeople from \"../components/mainScreenComp/ShowPeople\";\r\n\r\nclass ManagePeople extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    addPeople = (person) => {\r\n        console.log(person.prefferedSubjects + ' in managePeople')\r\n        this.props.addPeople(person);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <ShowPeople people = {this.props.people}></ShowPeople>\r\n                <AddPeople addPeople = {this.addPeople} subjects = {this.props.subjects}></AddPeople>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ManagePeople;","// const events = [\r\n//   {\r\n//     id: 0,\r\n//     title: 'All Day Event very long title',\r\n//     allDay: true,\r\n//     start: new Date(2015, 3, 0),\r\n//     end: new Date(2015, 3, 1),\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     title: 'Long Event',\r\n//     start: new Date(2015, 3, 7),\r\n//     end: new Date(2015, 3, 10),\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     title: 'DTS STARTS',\r\n//     start: new Date(2016, 2, 13, 0, 0, 0),\r\n//     end: new Date(2016, 2, 20, 0, 0, 0),\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     title: 'DTS ENDS',\r\n//     start: new Date(2016, 10, 6, 0, 0, 0),\r\n//     end: new Date(2016, 10, 13, 0, 0, 0),\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     title: 'Some Event',\r\n//     start: new Date(2015, 3, 9, 0, 0, 0),\r\n//     end: new Date(2015, 3, 10, 0, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     title: 'Conference',\r\n//     start: new Date(2015, 3, 11),\r\n//     end: new Date(2015, 3, 13),\r\n//     desc: 'Big conference for important people',\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     title: 'Meeting',\r\n//     start: new Date(2015, 3, 12, 10, 30, 0, 0),\r\n//     end: new Date(2015, 3, 12, 12, 30, 0, 0),\r\n//     desc: 'Pre-meeting meeting, to prepare for the meeting',\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     title: 'Lunch',\r\n//     start: new Date(2015, 3, 12, 12, 0, 0, 0),\r\n//     end: new Date(2015, 3, 12, 13, 0, 0, 0),\r\n//     desc: 'Power lunch',\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     title: 'Meeting',\r\n//     start: new Date(2015, 3, 12, 14, 0, 0, 0),\r\n//     end: new Date(2015, 3, 12, 15, 0, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     title: 'Happy Hour',\r\n//     start: new Date(2015, 3, 12, 17, 0, 0, 0),\r\n//     end: new Date(2015, 3, 12, 17, 30, 0, 0),\r\n//     desc: 'Most important meal of the day',\r\n//   },\r\n//   {\r\n//     id: 10,\r\n//     title: 'Dinner',\r\n//     start: new Date(2015, 3, 12, 20, 0, 0, 0),\r\n//     end: new Date(2015, 3, 12, 21, 0, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 11,\r\n//     title: 'Planning Meeting with Paige',\r\n//     start: new Date(2015, 3, 13, 8, 0, 0),\r\n//     end: new Date(2015, 3, 13, 10, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 11.1,\r\n//     title: 'Inconvenient Conference Call',\r\n//     start: new Date(2015, 3, 13, 9, 30, 0),\r\n//     end: new Date(2015, 3, 13, 12, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 11.2,\r\n//     title: \"Project Kickoff - Lou's Shoes\",\r\n//     start: new Date(2015, 3, 13, 11, 30, 0),\r\n//     end: new Date(2015, 3, 13, 14, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 11.3,\r\n//     title: 'Quote Follow-up - Tea by Tina',\r\n//     start: new Date(2015, 3, 13, 15, 30, 0),\r\n//     end: new Date(2015, 3, 13, 16, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 12,\r\n//     title: 'Late Night Event',\r\n//     start: new Date(2015, 3, 17, 19, 30, 0),\r\n//     end: new Date(2015, 3, 18, 2, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 12.5,\r\n//     title: 'Late Same Night Event',\r\n//     start: new Date(2015, 3, 17, 19, 30, 0),\r\n//     end: new Date(2015, 3, 17, 23, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 13,\r\n//     title: 'Multi-day Event',\r\n//     start: new Date(2015, 3, 20, 19, 30, 0),\r\n//     end: new Date(2015, 3, 22, 2, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 14,\r\n//     title: 'Today',\r\n//     start: new Date(new Date().setHours(new Date().getHours() - 3)),\r\n//     end: new Date(new Date().setHours(new Date().getHours() + 3)),\r\n//   },\r\n//   {\r\n//     id: 15,\r\n//     title: 'Point in Time Event',\r\n//     start: now,\r\n//     end: now,\r\n//   },\r\n//   {\r\n//     id: 16,\r\n//     title: 'Video Record',\r\n//     start: new Date(2015, 3, 14, 15, 30, 0),\r\n//     end: new Date(2015, 3, 14, 19, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 17,\r\n//     title: 'Dutch Song Producing',\r\n//     start: new Date(2015, 3, 14, 16, 30, 0),\r\n//     end: new Date(2015, 3, 14, 20, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 18,\r\n//     title: 'Itaewon Halloween Meeting',\r\n//     start: new Date(2015, 3, 14, 16, 30, 0),\r\n//     end: new Date(2015, 3, 14, 17, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 19,\r\n//     title: 'Online Coding Test',\r\n//     start: new Date(2015, 3, 14, 17, 30, 0),\r\n//     end: new Date(2015, 3, 14, 20, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 20,\r\n//     title: 'An overlapped Event',\r\n//     start: new Date(2015, 3, 14, 17, 0, 0),\r\n//     end: new Date(2015, 3, 14, 18, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 21,\r\n//     title: 'Phone Interview',\r\n//     start: new Date(2015, 3, 14, 17, 0, 0),\r\n//     end: new Date(2015, 3, 14, 18, 30, 0),\r\n//   },\r\n//   {\r\n//     id: 22,\r\n//     title: 'Cooking Class',\r\n//     start: new Date(2015, 3, 14, 17, 30, 0),\r\n//     end: new Date(2015, 3, 14, 19, 0, 0),\r\n//   },\r\n//   {\r\n//     id: 23,\r\n//     title: 'Go to the gym',\r\n//     start: new Date(2015, 3, 14, 18, 30, 0),\r\n//     end: new Date(2015, 3, 14, 20, 0, 0),\r\n//   },\r\n// ]\r\n\r\n\r\n//with drag, doesnt drop\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { toDate } from \"date-fns\";\r\nimport FullTask from \"./FullTask\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\nconst start1=new Date(2021,5,21,18,0,0);\r\nconst end1=new Date(2021,5,21,19,0,0);\r\nclass MyCalendar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state = {\r\n        updateTaskOpen : false,\r\n        taskTitle:'',\r\n        desc:'',\r\n        date:'',\r\n        time:'',\r\n        assignedTo:'',\r\n        subject:'',\r\n        taskObj:{}\r\n    }\r\n}\r\n  state = {\r\n\r\n    events: [\r\n      {\r\n        // start: 'Thu May 20 2021 15:38:00 GMT+0300 (Israel Daylight Time)',\r\n        // end: 'Thu May 20 2021 16:38:00 GMT+0300 (Israel Daylight Time)',\r\n        start: moment(\"21-05-2021-15:00\",\"DD-MM-YYYY-hh:mm\").toDate(),\r\n        end:  moment(\"21-05-2021-16:00\",\"DD-MM-YYYY-hh:mm\").toDate(),\r\n        title: \"New task\",\r\n        id: 1\r\n      },\r\n    ],\r\n  };\r\n\r\n   openTaskUpdate2 = (myTitle) => {\r\n        \r\n        // this.setState({\r\n        //     updateTaskOpen:true,\r\n        //     taskTitle:myTitle\r\n        // })\r\n\r\n        const currentTask = this.props.tasksToDo.filter((task) => {\r\n            if(myTitle == task.title)\r\n                return true;\r\n        }\r\n        )\r\n\r\n        this.setState({\r\n            updateTaskOpen : true,\r\n            taskTitle: currentTask[0].title,\r\n            desc: currentTask.description,\r\n            date: currentTask.date,\r\n            time:currentTask.time,\r\n            assignedTo:currentTask.assignedTo,\r\n            subject:currentTask.subject,\r\n\r\n            taskObj: {title: currentTask.title,\r\n                desc: currentTask.description,\r\n                date: currentTask.date,\r\n                time:currentTask.time,\r\n                assignedTo:currentTask.assignedTo,\r\n                subject:currentTask.subject}\r\n        })\r\n\r\n    }\r\n\r\n    setModalCloseInParent = () =>{\r\n      this.setState({\r\n          updateTaskOpen : false\r\n      })\r\n  }\r\n\r\n  onEventResize = (data) => {\r\n    const { start, end } = data;\r\n\r\n    this.setState((state) => {\r\n      state.events[0].start = start;\r\n      state.events[0].end = end;\r\n      return { events: [...state.events] };\r\n    });\r\n  };\r\n\r\n  onEventDrop = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  eventClicked=(event)=>{\r\n    this.openTaskUpdate2(event.title);\r\n      console.log(event)\r\n  }\r\n\r\n  // mapTasksToEvents=()=>{\r\n  //   const defineDates = this.props.tasksToDo.map((task) => {return({start: moment(task.date.concat('-').concat(task.time),\"DD-MM-YYYY-hh:mm\").toDate(), assignedTo : task.assignedTo, desc: task.desc, subject:task.subject, title:task.title})})\r\n  //   // const myEvents = defineDates.map((task,index)=>{return({start: task.start, end:new Date(task.start.addHours(task.start.getHours()+1)), title:'new title', id:index})})\r\n  //    const myEvents = defineDates.map((task,index)=>{return({start: task.start, end:new Date('22-05-2021-16:00'), title:'new title', id:index})})\r\n  //   this.setState({\r\n  //     events: myEvents\r\n  //   })\r\n  // }\r\n\r\n  // var today = new Date();\r\n  // today.setHours(today.getHours() + 4);\r\n\r\n  // assignedTo: \"Mom\"\r\n  // date: \"2021-05-06\"\r\n  // desc: \"eeee\"\r\n  // subject: \"Fun\"\r\n  // time: \"22:57\"\r\n  // title: \"www\"\r\n  \r\n  // componentDidUpdate(){\r\n  //   this.mapTasksToEvents();\r\n  // }\r\n\r\n  filterEvents =(events, filter) =>{\r\n      if (filter.name == 'Choose a Person' || filter.name == undefined )\r\n        return events;\r\n      else {\r\n        return events.filter((event)=>{if (event.assignedTo == filter.name) return true})\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const myEvents = this.filterEvents(this.props.events, this.props.filter);\r\n    return (\r\n      <div className=\"App\">\r\n        <DnDCalendar\r\n          defaultDate={moment().toDate()}\r\n          defaultView=\"week\"\r\n          events={myEvents}\r\n          //events={this.props.events}\r\n          localizer={localizer}\r\n          onEventDrop={this.onEventDrop}\r\n          onEventResize={this.onEventResize}\r\n          resizable\r\n          style={{ height: \"80vh\" }}\r\n          onSelectEvent = {this.eventClicked}\r\n          eventPropGetter={(this.props.eventPropGetter)}\r\n        />\r\n        <div>\r\n              <FullTask taskObj={this.state.taskObj} title={this.state.taskTitle} subject={this.state.subject} desc={this.state.desc} taskObj = {this.state.taskObj} taskTitle={this.state.taskTitle} setModalCloseInParent = {this.setModalCloseInParent} isModalOpen = {this.state.updateTaskOpen} updateTask = {this.props.updateTask} people = {this.props.people} subjects = {this.props.subjects} tasksToDo = {this.props.tasksToDo}></FullTask>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////.///\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Calendar, momentLocalizer } from \"react-big-calendar\";\r\n// import moment from \"moment\";\r\n// import \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\n// const localizer = momentLocalizer(moment);\r\n\r\n// class MyCalendar extends Component {\r\n//   state = {\r\n//     events: [\r\n//       {\r\n//         start: moment().toDate(),\r\n//         end: moment()\r\n//           .add(1, \"days\")\r\n//           .toDate(),\r\n//         title: \"Some title\"\r\n//       }\r\n//     ]\r\n//   };\r\n// // {start: Thu May 20 2021 15:38:00 GMT+0300 (Israel Daylight Time), end: Fri May 21 2021 15:38:00 GMT+0300 (Israel Daylight Time), title: \"Some title\"}\r\n//   render() {\r\n//     console.log(this.state.events);\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Calendar\r\n//           localizer={localizer}\r\n//           defaultDate={new Date()}\r\n//           defaultView=\"week\"\r\n//           events={this.state.events}\r\n//           style={{ height: \"50vh\" }}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// import React from \"react\";\r\n// import {format, startOfWeek, addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parse, subMonths, addMonths  } from \"date-fns\";\r\n\r\n// class MyCalendar extends React.Component {\r\n//   state = {\r\n//     currentMonth: new Date(),\r\n//     selectedDate: new Date()\r\n//   };\r\n\r\n//   renderHeader() {\r\n//     const dateFormat = \"mmmm yyyy\";\r\n\r\n//     return (\r\n//       <div className=\"header row flex-middle\">\r\n//         <div className=\"col col-start\">\r\n//           <div className=\"icon\" onClick={this.prevMonth}>\r\n//             chevron_left\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col col-center\">\r\n//           <span>{format(this.state.currentMonth, dateFormat)}</span>\r\n//         </div>\r\n//         <div className=\"col col-end\" onClick={this.nextMonth}>\r\n//           <div className=\"icon\">chevron_right</div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   renderDays() {\r\n//     const dateFormat = \"dddd\";\r\n//     const days = [];\r\n\r\n//     let startDate = startOfWeek(this.state.currentMonth);\r\n\r\n//     for (let i = 0; i < 7; i++) {\r\n//       days.push(\r\n//         <div className=\"col col-center\" key={i}>\r\n//           {format(addDays(startDate, i), dateFormat)}\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     return <div className=\"days row\">{days}</div>;\r\n//   }\r\n\r\n//   renderCells() {\r\n//     const { currentMonth, selectedDate } = this.state;\r\n//     const monthStart = startOfMonth(currentMonth);\r\n//     const monthEnd = endOfMonth(monthStart);\r\n//     const startDate = startOfWeek(monthStart);\r\n//     const endDate = endOfWeek(monthEnd);\r\n\r\n//     const dateFormat = \"D\";\r\n//     const rows = [];\r\n\r\n//     let days = [];\r\n//     let day = startDate;\r\n//     let formattedDate = \"\";\r\n\r\n//     while (day <= endDate) {\r\n//       for (let i = 0; i < 7; i++) {\r\n//         formattedDate = format(day, dateFormat);\r\n//         const cloneDay = day;\r\n//         days.push(\r\n//           <div\r\n//             className={`col cell ${\r\n//               !isSameMonth(day, monthStart)\r\n//                 ? \"disabled\"\r\n//                 : isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n//             }`}\r\n//             key={day}\r\n//             onClick={() => this.onDateClick(parse(cloneDay))}\r\n//           >\r\n//             <span className=\"number\">{formattedDate}</span>\r\n//             <span className=\"bg\">{formattedDate}</span>\r\n//           </div>\r\n//         );\r\n//         day = addDays(day, 1);\r\n//       }\r\n//       rows.push(\r\n//         <div className=\"row\" key={day}>\r\n//           {days}\r\n//         </div>\r\n//       );\r\n//       days = [];\r\n//     }\r\n//     return <div className=\"body\">{rows}</div>;\r\n//   }\r\n\r\n//   onDateClick = day => {\r\n//     this.setState({\r\n//       selectedDate: day\r\n//     });\r\n//   };\r\n\r\n//   nextMonth = () => {\r\n//     this.setState({\r\n//       currentMonth: addMonths(this.state.currentMonth, 1)\r\n//     });\r\n//   };\r\n\r\n//   prevMonth = () => {\r\n//     this.setState({\r\n//       currentMonth: subMonths(this.state.currentMonth, 1)\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"calendar\">\r\n//         {this.renderHeader()}\r\n//         {this.renderDays()}\r\n//         {this.renderCells()}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nexport default MyCalendar;","import './App.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport SupermomMain from './pages/SupermomMain'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ManageTasksMom from './pages/ManageTasksMom';\nimport ManageSubjects from './pages/ManageSubjects';\nimport ManagePeople from './pages/ManagePeople';\nimport NavbarMain from './components/mainScreenComp/NavbarMain';\nimport { HashRouter, Route} from 'react-router-dom';\nimport {Col, Card} from 'react-bootstrap';\nimport React from 'react';\nimport MyCalendar from './components/mainScreenComp/MyCalendar';\nimport Basic from './components/mainScreenComp/MyCalendar';\nimport moment from \"moment\";\n\nclass App extends React.Component {\n\n      constructor(props){\n        super(props);\n        \n        this.state = {\n            tasksToDo : [],\n            // Maybe find done tasks dinamically?\n            tasksDone : [],\n            // tasksToShow : [{title : 'a'},{title : 'b'}],\n            tasksToShow : [],\n            // <Card><h1>{task.title}</h1><p>{task.desc}</p><h5>{task.date}+' '+{task.time}</h5><h5>{task.assignedTo}</h5></Card>\n            subjects : [{subject:'Choose a Subject'},{subject:'Fun'},{subject:'Studies'}],\n            people: [{name:'Choose a Person'},{name: 'Mom'}, {name: 'Dad'}, {name: 'Adi'}],\n            //  filter:{name: '', subject:'', date: ''}\n            filter:{name:'', subject:'', date:''},\n            events:[],\n            mainFilter:{person:'', subject:''}\n        }\n    }\n\n    // title: this.state.title,\n    //         subject: this.state.subject,\n    //         desc: this.state.desc,\n    //         date: this.state.date,\n    //         time: this.state.time,\n    //         assignedTo: this.state.assignedTo\n\n    showTasks = (filter) => {\n\n      // Change tasksToShow to filtered tasks\n      // this.setState({\n      //   tasksToShow : this.state.tasksToDo \n      // })\n     \n      // const tasksCards = this.state.tasksToDo.map((task, index) => {\n      //   return(\n      //       <Col lg={3} md={6} sm={12}>\n      //               <Card><h1>{task.title}</h1><p>{task.desc}</p><h5>{task.date}+' '+{task.time}</h5><h5>{task.assignedTo}</h5></Card>\n      //        </Col>\n      //   )\n    }\n\n    // )\n    // return tasksCards;\n    \n    setMainFilter = (myFilter) => {\n      this.setState(\n        {\n            mainFilter: myFilter\n        }      \n      )\n    }\n\n    setFilter = (myFilter) => {\n\n      // if (myFilter.hasOwnProperty('name')){\n      //   this.setState(\n      //     {\n      //         filter.name: myFilter.name\n      //     }      \n      //   )\n      // }\n      // else if (myFilter.hasOwnProperty('subject')){\n      //   this.setState(\n      //     {\n      //         filter.subject: myFilter.subject\n      //     }      \n      //   )\n      // }\n\n      this.setState(\n        {\n            filter: myFilter\n        }      \n      )\n      // this.state.filter.name = filter.name;\n      // this.state.filter.subject = filter.subject;\n    }\n\n    \n    updateTask = (task) => {\n      // Update the task\n     console.log('updateTask');\n    const taskIndex = this.state.tasksToDo.findIndex((taskToDo) => {\n                                                      if (task.title == taskToDo.title){\n                                                        return true;\n                                                      }});\n    let helper = [...this.state.tasksToDo];\n    helper[taskIndex] = task;\n    this.setState({\n      tasksToDo : helper\n    })\n\n\n  //    const currentTask = this.props.tasksToDo.find((task) => {\n  //     if(this.props.title == task.title)\n  //         return true;\n  // }\n  // )\n  }\n\n    addTask = (task) =>{\n      console.log('in addtask in app.js')\n      let helper = this.state.tasksToDo.concat(task);\n      this.setState(\n          {\n              tasksToDo: helper \n          }      \n      )\n\n        const defineDates = this.state.tasksToDo.map((task) => {return({date: task.date,time:task.time, start: moment(task.date.concat('-').concat(task.time),\"YYYY-MM-DD-hh:mm\").toDate(), assignedTo : task.assignedTo, desc: task.desc, subject:task.subject, title:task.title})})\n        // const myEvents = defineDates.map((task,index)=>{return({start: task.start, end:new Date(task.start.addHours(task.start.getHours()+1)), title:'new title', id:index})})\n         const myEvents = defineDates.map((task,index)=>{return({start: task.start, end:moment(task.date.concat('-').concat((parseInt((task.time).substring(0,2))+1).toString()),\"YYYY-MM-DD-hh:mm\").toDate(), title:task.title, id:index, assignedTo : task.assignedTo})})\n        this.setState({\n          events: myEvents\n        })\n      }\n   \n\n    addSubject = (sub) =>{\n      let helper = this.state.subjects.concat(sub);\n      // console.log(sub.subject + ' in add subject')\n      // console.log(helper[0].subject + ' in add subject')\n      this.setState(\n          {\n            subjects: helper \n          }      \n      )\n      }\n\n      addPeople = (person) =>{\n        console.log(person);\n        let helper = this.state.people.concat(person);\n        console.log(`${helper[3].name} + ${helper[3].bday}+${helper[3].prefferedSubjects}+${helper[3].permission} + in app add people`)\n        this.setState(\n            {\n              people: helper \n            }      \n        )\n        }\n\n    removeSubject = (subject) =>{\n      // let helper = ???;\n      // this.setState(\n      //     {\n      //       subjects: helper \n      //     }      \n      // )\n    }\n\n      render(){\n        \n        return (\n\n        <HashRouter>\n\n          <NavbarMain></NavbarMain>\n          <Route exact path=\"/\">\n            <SupermomMain filter = {this.state.filter} updateTask = {this.updateTask} setFilter = {this.setFilter} tasksToDo = {this.state.tasksToDo} filter = {this.state.filter} tasksToShow = {this.state.tasksToShow} showTasks = {this.showTasks} people = {this.state.people} subjects = {this.state.subjects}></SupermomMain>\n            <MyCalendar filter = {this.state.filter}\n                        updateTask = {this.updateTask}\n                        tasksToDo = {this.state.tasksToDo} \n                        people={this.state.people} \n                        subjects = {this.state.subjects}\n                        events={this.state.events}\n                        eventPropGetter={\n                          (event, start, end, isSelected) => {\n                            let newStyle = {\n                              backgroundColor: \"lightgrey\",\n                              color: 'black',\n                              borderRadius: \"0px\",\n                              border: \"none\"\n                            };\n                      \n                            if (event.assignedTo == 'Mom'){\n                              newStyle.backgroundColor = \"lightpink\"\n                            }\n                           else if (event.assignedTo == 'Dad'){\n                              newStyle.backgroundColor = \"lightblue\"\n                            }\n                            if (event.assignedTo == 'Adi'){\n                              newStyle.backgroundColor = \"lightgreen\"\n                            }\n                      \n                            return {\n                              className: \"\",\n                              style: newStyle\n                            };\n                          }\n                        }></MyCalendar>\n          </Route>\n          <Route exact path=\"/manageTasks\">\n            <ManageTasksMom updateTask = {this.updateTask} setFilter = {this.setFilter} tasksToDo = {this.state.tasksToDo} filter = {this.state.filter} tasksToShow = {this.state.tasksToShow} showTasks = {this.showTasks} addTask = {this.addTask} people={this.state.people} subjects = {this.state.subjects}></ManageTasksMom>\n          </Route>\n          <Route exact path=\"/manageSubjects\">\n            <ManageSubjects filter = {this.state.filter} addSubject = {this.addSubject} subjects = {this.state.subjects}></ManageSubjects>\n          </Route>\n          <Route exact path=\"/managePeople\">\n            <ManagePeople filter = {this.state.filter} addPeople = {this.addPeople} people = {this.state.people} subjects= {this.state.subjects}></ManagePeople>\n          </Route>\n        </HashRouter>\n      )\n    }\n}    \n\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}